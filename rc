# The following lines were added by compinstall
# zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' matcher-list '' 'r:|[._-]=** r:|=**' 'l:|=* r:|=*'
zstyle :compinstall filename '/home/nate/.zshrc'
autoload -Uz compinit
compinit
# End of lines added by compinstall


# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt autocd beep extendedglob nomatch
bindkey -v
# End of lines configured by zsh-newuser-install


# Plugins time!
# plugins=(git npm archlinux brew bundler git-flow github knife lein node npm lol pip python rails3 rake rbenv vi-mode)
plugins=(git brew bundler github knife rails3 rake rbenv vi-mode)

# These guys know what they are doing.
export ZSH=$HOME/.oh-my-zsh
export ZSH_THEME="so8res"
source $ZSH/oh-my-zsh.sh


# Fuck flow control. Right off the bat.
stty -ixon
# LOL HAI
setopt DVORAK
setopt interactivecomments
unsetopt correct_all


# Important variables. TODO: split into ruby/haskell/etc

# BASIC PATH ====================================================================
export PATH=/bin:/sbin:$PATH						# / is last
export PATH=/usr/bin:/usr/sbin:$PATH				# /usr is second-last
export PATH=/usr/local/bin:/usr/local/sbin:$PATH	# /usr/local is before that
export PATH=$HOME/.bin:$HOME/.sbin:$PATH			# $HOME is first
# CUSTOM EXECUTABLES ============================================================
export PATH=$HOME/.exe:$PATH
# HASKELL =======================================================================
export PATH=$HOME/.cabal/bin:$PATH
export PATH=$HOME/Library/Haskell/bin:$PATH			# MAC TODO
# NODE ==========================================================================
export PATH=/usr/local/lib/node_modules/.bin:$PATH
# RUBY ==========================================================================
export PATH=$HOME/.rbenv/bin:$HOME/.rbenv/shims:$PATH


# My aliases.
alias rake='be rake'
alias cap='be cap'
alias rspec='be rspec'
alias gcd="cd ./$(git rev-parse --show-cdup 2> /dev/null)"
alias gs="git status --short"
alias tmux="TERM=xterm-256color tmux"
alias mkdir='mkdir -p'
alias bbuild="bookbuilder -a \"Nate Soares\""
alias pacman="pacman-color"
alias aurify="makepkg -s && sudo pacman -U *.pkg.*"
alias pirate="aria2c"
alias view="feh -F"
alias pdf="apvlv"
alias pdf2="evince"
alias ebook="calibre"
# TODO: put arch stuff in an arch plugin
alias get="sudo pacman-color -S"
alias unget="sudo pacman-color -R"
alias canget="pacman-color -Ss"
alias music="ncmpc"
alias song="cvlc"
alias dvi="evince"
alias so="source"


# TODO: Put extract, gcd, and qfind in plugins
# This is sort of like an alias.
qfind() { find . -iname "*$1*" }


# Ls on printing
# TODO: Find a better way to do the ls thing (how to we call aliased things?)
preexec() { ODIR="$(pwd)" }
precmd() { [[ "$(pwd)" != $ODIR ]] && ls }



# TODO: I think that this is included by zsh
# Extract all the archives!
extract() {
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2)	tar xvjf $1		;;
			*.tar.gz)	tar xvzf $1		;;
			*.bz2)		bunzip2 $1		;;
			*.rar)		unrar x $1		;;
			*.gz)		gunzip $1		;;
			*.tar)		tar xvf $1		;;
			*.tbz2)		tar xvjf $1		;;
			*.tgz)		tar xvzf $1		;;
			*.zip)		unzip $1		;;
			*.Z)		uncompress $1	;;
			*.7z)		7z x $1			;;
			*)			echo "'$1' cannot be extracted via >extract<" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}


# TODO: Make your autocomplete smarter
# No correcting
# unsetopt correct_all
# Complete from both ends
# setopt completeinword
# Insensitive complete
# zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
# Better killall
# zstyle ':completion:*:killall:*' command 'ps -u $USER -o cmd'
# Better 'word' usage (^W)
# autoload select-word-style
# select-word-style shell
# Superior globbing
# setopt extendedglob
# unsetopt caseglob


# TODO: Get some more virtualenvs back
# export WORKON_HOME=$HOME/.virtualenvs
# export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python
# source /usr/local/bin/virtualenvwrapper.sh


# Git
export GIT_EDITOR=vim


# TODO: Move into screen or plugin
if [ $TERM = "screen-256color" ]; then
	PS1="%{$fg[green]%}"'$(tmux display-message -p "#W")'"%{$fg[white]%}:"$PS1
	PS1="%{$fg[blue]%}"'$(tmux display-message -p "#I")'"%{$fg[white]%}."$PS1
elif [ $TERM = "xterm" ]; then
	if [ !`tmux attach` ]; then
		TERM=xterm-256color tmux
	fi
fi


# TODO: Figure out how to pgrep on mac
# if [ ! "`pgrep mpd`" ]; then
# 	echo "Starting music player daemon..."
# 	mpd
# fi

# Ruby settings (TODO: Put in ruby plugin)
export RUBY_HEAP_MIN_SLOTS=500000
export RUBY_HEAP_SLOTS_INCREMENT=250000
export RUBY_HEAP_SLOTS_GROWTH_FACTOR=1
export RUBY_GC_MALLOC_LIMIT=50000000
# TODO: Find a non-mac way to source the completions:
source "/usr/local/Cellar/rbenv/0.3.0/libexec/../completions/rbenv.zsh"
rbenv rehash 2>/dev/null

# TODO: Make this work on non-mac machines
function terminal_theme {
	export TERMINAL_THEME=$1;
	# Keep in synch with default terminal theme
	if [ -z "$TERMINAL_THEME" ]; then export TERMINAL_THEME="Solarized Light"; fi
	osascript -e "tell application \"Terminal\" to set current settings of window 1 to settings set \"$TERMINAL_THEME\""
}
function dark { terminal_theme "Solarized Dark" }
function light { terminal_theme "Solarized Light" }
terminal_theme

# TODO
bindkey '^R' history-incremental-search-backward
